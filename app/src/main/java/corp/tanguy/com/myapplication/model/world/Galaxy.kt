package corp.tanguy.com.myapplication.model.world

class Galaxy {
    var clusters = listOf<Cluster>()
    var planets = listOf<Planet>()

    init {
        val monCalamari = Planet("Mon Calamari")
        val yavin = Planet("Yavin")
        val felucia = Planet("Felucia")
        val saleucami = Planet("Saleucami")
        val kessel = Planet("Kessel")
        val nalHutta = Planet("Nal Hutta")
        val toydaria = Planet("Toydaria")
        val bothawui = Planet("Bothawui")
        val tatooine = Planet("Tatooine")
        val ryloth = Planet("Ryloth")
        val rodia = Planet("Rodia")
        val geonosis = Planet("Geonosis")
        val dantooine = Planet("Dantooine")
        val mygeeto = Planet("Mygeeto")
        val illum = Planet("Illum")
        val ordMantel = Planet("Ord Mantel")
        val dathomir = Planet("Dathomir")
        val mandalore = Planet("Mandalore")
        val kashyyk = Planet("Kashyyk")
        val malastare = Planet("Malastare")
        val naboo = Planet("Naboo")
        val sullust = Planet("Sullust")
        val dagobah = Planet("Dagobah")
        val utapau = Planet("Utapau")
        val mustafar = Planet("Mustafar")
        val bespin = Planet("Bespin")
        val endor = Planet("Endor")
        val hoth = Planet("Hoth")
        val alderaan = Planet("Alderaan")
        val catoNemodia = Planet("Cato Nemodia")
        val corellia = Planet("Corellia")
        val coruscant = Planet("Coruscant")

        planets = listOf(monCalamari, yavin, felucia, saleucami, kessel, nalHutta, toydaria, bothawui, tatooine, ryloth, rodia,
                geonosis, dantooine, mygeeto, illum, ordMantel, dathomir, mandalore, kashyyk, malastare, naboo, sullust, dagobah,
                utapau, mustafar, bespin, endor, hoth, alderaan, catoNemodia, corellia, coruscant)

        monCalamari.attainablePlanets = ArrayList(listOf(saleucami, felucia))
        yavin.attainablePlanets = ArrayList(listOf(felucia, dathomir, mandalore))
        felucia.attainablePlanets = ArrayList(listOf(yavin, monCalamari, saleucami, mandalore))
        saleucami.attainablePlanets = ArrayList(listOf(kessel, toydaria, mandalore, kashyyk, felucia, monCalamari))
        kessel.attainablePlanets = ArrayList(listOf(saleucami, nalHutta, toydaria))
        nalHutta.attainablePlanets = ArrayList(listOf(kessel, bothawui, toydaria))
        toydaria.attainablePlanets = ArrayList(listOf(malastare, kashyyk, saleucami, kessel, nalHutta, bothawui))
        bothawui.attainablePlanets = ArrayList(listOf(toydaria, nalHutta, tatooine, rodia, malastare))
        tatooine.attainablePlanets = ArrayList(listOf(bothawui, ryloth, geonosis, rodia))
        ryloth.attainablePlanets = ArrayList(listOf(geonosis, tatooine))
        rodia.attainablePlanets = ArrayList(listOf(tatooine, geonosis, naboo, malastare, bothawui))
        geonosis.attainablePlanets = ArrayList(listOf(rodia, tatooine, ryloth, utapau, naboo))
        dantooine.attainablePlanets = ArrayList(listOf(dathomir, mygeeto))
        mygeeto.attainablePlanets = ArrayList(listOf(dagobah, dathomir, illum, ordMantel, mandalore))
        illum.attainablePlanets = ArrayList(listOf(mygeeto, ordMantel))
        ordMantel.attainablePlanets = ArrayList(listOf(illum, mygeeto, mandalore, alderaan, coruscant))
        dathomir.attainablePlanets = ArrayList(listOf(mygeeto, dantooine, mandalore))
        mandalore.attainablePlanets = ArrayList(listOf(dathomir, yavin, felucia, saleucami, kashyyk, alderaan, ordMantel, mygeeto))
        kashyyk.attainablePlanets = ArrayList(listOf(mandalore, saleucami, toydaria, malastare, catoNemodia, alderaan))
        malastare.attainablePlanets = ArrayList(listOf(kashyyk, toydaria, bothawui, rodia, naboo, sullust, catoNemodia))
        naboo.attainablePlanets = ArrayList(listOf(malastare, rodia, geonosis, utapau, dagobah, sullust))
        sullust.attainablePlanets = ArrayList(listOf(corellia, catoNemodia, malastare, naboo, dagobah, mustafar, bespin))
        dagobah.attainablePlanets = ArrayList(listOf(sullust, naboo, utapau, mustafar))
        utapau.attainablePlanets = ArrayList(listOf(dagobah, naboo, geonosis))
        mustafar.attainablePlanets = ArrayList(listOf(sullust, dagobah, hoth, bespin))
        bespin.attainablePlanets = ArrayList(listOf(sullust, mustafar, hoth, endor))
        endor.attainablePlanets = ArrayList(listOf(bespin, hoth))
        hoth.attainablePlanets = ArrayList(listOf(endor, bespin, mustafar))
        alderaan.attainablePlanets = ArrayList(listOf(ordMantel, mandalore, kashyyk, catoNemodia, corellia, coruscant))
        catoNemodia.attainablePlanets = ArrayList(listOf(alderaan, kashyyk, malastare, sullust, corellia))
        corellia.attainablePlanets = ArrayList(listOf(coruscant, alderaan, catoNemodia, sullust))
        coruscant.attainablePlanets = ArrayList(listOf(ordMantel, alderaan, corellia))

        val outerRim1 = Cluster("Outer Rim 1", listOf(monCalamari, yavin, felucia, saleucami))
        val outerRim2 = Cluster("Outer Rim 2", listOf(kessel, nalHutta, toydaria, bothawui))
        val outerRim3 = Cluster("Outer Rim 3", listOf(tatooine, ryloth, rodia, geonosis))
        val midRim1 = Cluster("Mid Rim 1", listOf(dantooine, mygeeto, illum, ordMantel))
        val midRim2 = Cluster("Mid Rim 2", listOf(dathomir, mandalore, kashyyk, malastare))
        val midRim3 = Cluster("Mid Rim 3", listOf(naboo, sullust, dagobah, utapau))
        val midRim4 = Cluster("Mid Rim 4", listOf(bespin, mustafar, endor, hoth))
        val innerRim = Cluster("Inner Rim", listOf(alderaan, catoNemodia, corellia, coruscant))

        clusters = listOf(outerRim1, outerRim2, outerRim3, midRim1, midRim2, midRim3, midRim4, innerRim)

    }
}
